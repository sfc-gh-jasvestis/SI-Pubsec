-- Cleanup Script for Singapore Smart Nation Intelligence Demo
-- This script removes all demo objects to start fresh
-- ⚠️  WARNING: This will delete ALL demo data and objects ⚠️

-- Switch to ACCOUNTADMIN for cleanup
USE ROLE ACCOUNTADMIN;

-- Display warning message
SELECT '⚠️  WARNING: This script will DELETE all demo data and objects!' as WARNING_MESSAGE,
       'Press Ctrl+C now if you want to cancel this operation' as ACTION_REQUIRED,
       'Waiting 10 seconds before proceeding...' as COUNTDOWN;

-- Optional: Add a delay (uncomment if your client supports it)
-- CALL SYSTEM$WAIT(10);

SELECT 'Starting cleanup process...' as STATUS;

-- 1. Drop all demo tables and views
SELECT 'Dropping demo tables and views...' as STEP;

-- Drop views first (due to dependencies)
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.CITIZEN_SATISFACTION_SUMMARY;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE_DASHBOARD;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.CITIZEN_SERVICE_ANALYTICS;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.POLICY_PERFORMANCE_ANALYTICS;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE_ANALYTICS;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.DEMO_SUMMARY_STATS;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_EMERGENCY_RESPONSE;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SEASONAL_POLICY_WEATHER_IMPACT;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_DASHBOARD;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SINGAPORE_WEATHER_SUMMARY;
DROP VIEW IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.INTEGRATED_DASHBOARD;

-- Drop tables
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.CITIZEN_DATA.CITIZEN_PROFILES;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SERVICES.SERVICE_INTERACTIONS;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SERVICES.INTER_AGENCY_WORKFLOWS;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.POLICY_IMPACT;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.CURRENT_EVENTS_IMPACT;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.WEATHER_DATA;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.ECONOMIC_INDICATORS;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.TRANSPORT_DATA;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.HEALTH_TRENDS;
DROP TABLE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.SINGAPORE_WEATHER_DETAILED;

-- 2. Drop stored procedures
SELECT 'Dropping stored procedures...' as STEP;

DROP PROCEDURE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.INTELLIGENCE.GENERATE_POLICY_BRIEF(STRING, STRING);
DROP PROCEDURE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.INTELLIGENCE.SEND_SERVICE_ALERT(STRING, STRING, STRING);
DROP PROCEDURE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.INTELLIGENCE.OPTIMIZE_RESOURCES(STRING, STRING);

-- 3. Drop Cortex Analyst objects
SELECT 'Dropping Cortex Analyst objects...' as STEP;

-- Drop semantic models (if they exist)
DROP CORTEX ANALYST IF EXISTS SNOWFLAKE_CITIZEN_SERVICES_ANALYST;
DROP CORTEX ANALYST IF EXISTS SNOWFLAKE_POLICY_IMPACT_ANALYST;
DROP CORTEX ANALYST IF EXISTS SNOWFLAKE_SERVICE_PERFORMANCE_ANALYST;
DROP CORTEX ANALYST IF EXISTS SNOWFLAKE_WEATHER_SERVICE_ANALYST;

-- Drop Cortex Search services (if they exist)
DROP CORTEX SEARCH SERVICE IF EXISTS SNOWFLAKE_GOV_KNOWLEDGE_SERVICE;

-- 4. Drop file formats and stages
SELECT 'Dropping file formats and stages...' as STEP;

DROP FILE FORMAT IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SEMANTIC_MODELS.YAML_FORMAT;
DROP STAGE IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SEMANTIC_MODELS.ANALYST_STAGE;

-- 5. Drop Snowflake Intelligence agents
SELECT 'Dropping Snowflake Intelligence agents...' as STEP;

-- Note: Agent dropping syntax may vary - check your Snowflake version
-- DROP AGENT IF EXISTS snowflake_intelligence.agents.SG_Smart_Nation_Assistant;

-- 6. Drop schemas
SELECT 'Dropping schemas...' as STEP;

DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.INTELLIGENCE CASCADE;
DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.CITIZEN_DATA CASCADE;
DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SERVICES CASCADE;
DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.ANALYTICS CASCADE;
DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA CASCADE;
DROP SCHEMA IF EXISTS SNOWFLAKE_PUBSEC_DEMO.SEMANTIC_MODELS CASCADE;

-- 7. Drop databases
SELECT 'Dropping databases...' as STEP;

DROP DATABASE IF EXISTS SNOWFLAKE_PUBSEC_DEMO CASCADE;

-- Note: Keep snowflake_intelligence database as it may be used by other projects
-- DROP DATABASE IF EXISTS snowflake_intelligence CASCADE;

-- 8. Drop warehouse
SELECT 'Dropping warehouse...' as STEP;

DROP WAREHOUSE IF EXISTS SNOWFLAKE_DEMO_WH;

-- 9. Drop roles (optional - be careful with this)
SELECT 'Dropping demo roles...' as STEP;

-- Revoke role from users first
REVOKE ROLE SNOWFLAKE_INTELLIGENCE_ADMIN FROM USER CURRENT_USER();

-- Drop the role
DROP ROLE IF EXISTS SNOWFLAKE_INTELLIGENCE_ADMIN;
DROP ROLE IF EXISTS SG_INTELLIGENCE_ADMIN; -- Legacy role name

-- 10. Verification
SELECT 'Cleanup verification...' as STEP;

-- Check that objects are gone
SHOW DATABASES LIKE 'SNOWFLAKE_PUBSEC_DEMO';
SHOW WAREHOUSES LIKE 'SNOWFLAKE_DEMO_WH';
SHOW ROLES LIKE '%INTELLIGENCE_ADMIN';

-- Final status
SELECT '✅ Cleanup completed successfully!' as STATUS,
       'All demo objects have been removed' as RESULT,
       'You can now run the setup scripts to create a fresh environment' as NEXT_STEP;

-- Display cleanup summary
SELECT 
    'Databases Dropped' as OBJECT_TYPE,
    'SNOWFLAKE_PUBSEC_DEMO' as OBJECTS_REMOVED
UNION ALL
SELECT 
    'Warehouses Dropped' as OBJECT_TYPE,
    'SNOWFLAKE_DEMO_WH' as OBJECTS_REMOVED
UNION ALL
SELECT 
    'Roles Dropped' as OBJECT_TYPE,
    'SNOWFLAKE_INTELLIGENCE_ADMIN' as OBJECTS_REMOVED
UNION ALL
SELECT 
    'Schemas Dropped' as OBJECT_TYPE,
    'INTELLIGENCE, CITIZEN_DATA, SERVICES, ANALYTICS, EXTERNAL_DATA, SEMANTIC_MODELS' as OBJECTS_REMOVED
UNION ALL
SELECT 
    'Tables/Views Dropped' as OBJECT_TYPE,
    '15+ tables and views removed' as OBJECTS_REMOVED;
