-- ============================================================================
-- UPDATE ANALYTICS VIEWS - Singapore Timezone & 2 Decimal Places
-- ============================================================================
-- This script updates existing analytics views to use Singapore timezone
-- and format all numeric values to 2 decimal places for better readability

-- Switch to the appropriate role and context
USE ROLE SNOWFLAKE_INTELLIGENCE_ADMIN;
USE DATABASE SNOWFLAKE_PUBSEC_DEMO;
USE WAREHOUSE SNOWFLAKE_DEMO_WH;

SELECT 'Starting analytics views update...' as STATUS;

-- ============================================================================
-- 1. UPDATE CITIZEN SATISFACTION SUMMARY VIEW
-- ============================================================================

CREATE OR REPLACE VIEW SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.CITIZEN_SATISFACTION_SUMMARY AS
SELECT
    cp.AGE_GROUP,
    cp.POSTAL_DISTRICT,
    ROUND(AVG(cp.SATISFACTION_SCORE), 2) as AVG_SATISFACTION,
    COUNT(*) as CITIZEN_COUNT,
    ROUND(AVG(cp.DIGITAL_LITERACY_SCORE), 2) as AVG_DIGITAL_LITERACY
FROM SNOWFLAKE_PUBSEC_DEMO.CITIZEN_DATA.CITIZEN_PROFILES cp
GROUP BY cp.AGE_GROUP, cp.POSTAL_DISTRICT;

SELECT 'âœ… Updated: CITIZEN_SATISFACTION_SUMMARY' as STATUS;

-- ============================================================================
-- 2. UPDATE SERVICE PERFORMANCE DASHBOARD VIEW
-- ============================================================================

CREATE OR REPLACE VIEW SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE_DASHBOARD AS
SELECT
    sp.AGENCY,
    sp.SERVICE_NAME,
    sp.METRIC_TYPE,
    ROUND(AVG(sp.METRIC_VALUE), 2) as AVG_PERFORMANCE,
    ROUND(AVG(sp.BENCHMARK_VALUE), 2) as BENCHMARK,
    COUNT(CASE WHEN sp.PERFORMANCE_STATUS = 'Exceeding' THEN 1 END) as EXCEEDING_COUNT,
    COUNT(*) as TOTAL_METRICS
FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE sp
WHERE sp.MEASUREMENT_DATE >= DATEADD(day, -30, CURRENT_DATE())
GROUP BY sp.AGENCY, sp.SERVICE_NAME, sp.METRIC_TYPE;

SELECT 'âœ… Updated: SERVICE_PERFORMANCE_DASHBOARD' as STATUS;

-- ============================================================================
-- 3. UPDATE WEATHER SERVICE CORRELATION SIMPLE VIEW
-- ============================================================================

CREATE OR REPLACE VIEW SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION_SIMPLE AS
SELECT 
    CONVERT_TIMEZONE('UTC', 'Asia/Singapore', DATE(si.INTERACTION_TIMESTAMP)) as SERVICE_DATE,
    wd.WEATHER_CONDITION,
    ROUND(wd.RAINFALL_MM, 2) as RAINFALL_MM,
    wd.ALERT_LEVEL,
    si.SERVICE_TYPE,
    si.INTERACTION_CHANNEL,
    COUNT(*) as INTERACTION_COUNT,
    ROUND(AVG(si.DURATION_MINUTES), 2) as AVG_DURATION,
    ROUND(AVG(si.SATISFACTION_RATING), 2) as AVG_SATISFACTION
FROM SNOWFLAKE_PUBSEC_DEMO.SERVICES.SERVICE_INTERACTIONS si
JOIN SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.WEATHER_DATA wd 
    ON DATE(si.INTERACTION_TIMESTAMP) = DATE(wd.DATE_TIME)
    AND wd.LOCATION = 'Marina Barrage'
GROUP BY 1,2,3,4,5,6;

SELECT 'âœ… Updated: WEATHER_SERVICE_CORRELATION_SIMPLE' as STATUS;

-- ============================================================================
-- 4. UPDATE COMPREHENSIVE WEATHER SERVICE CORRELATION VIEW
-- ============================================================================

CREATE OR REPLACE VIEW SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION AS
WITH HOURLY_WEATHER AS (
    SELECT 
        CONVERT_TIMEZONE('UTC', 'Asia/Singapore', DATE_TRUNC('hour', DATE_TIME)) as HOUR_TIMESTAMP,
        CASE 
            WHEN LOCATION IN ('Changi', 'Paya Lebar') THEN 'East'
            WHEN LOCATION IN ('Jurong West') THEN 'West'
            WHEN LOCATION IN ('Woodlands') THEN 'North'
            WHEN LOCATION IN ('Marina Barrage') THEN 'Central'
            ELSE 'Central'
        END as REGION,
        ROUND(AVG(TEMPERATURE_C), 2) as AVG_TEMP_C,
        ROUND(AVG(HUMIDITY_PCT), 2) as AVG_HUMIDITY,
        ROUND(SUM(RAINFALL_MM), 2) as TOTAL_RAINFALL,
        MAX(CASE WHEN ALERT_LEVEL != 'Normal' THEN 1 ELSE 0 END) as WEATHER_ALERT_FLAG,
        MODE(WEATHER_CONDITION) as DOMINANT_WEATHER
    FROM SNOWFLAKE_PUBSEC_DEMO.EXTERNAL_DATA.WEATHER_DATA
    GROUP BY 1, 2
),
HOURLY_SERVICES AS (
    SELECT 
        CONVERT_TIMEZONE('UTC', 'Asia/Singapore', DATE_TRUNC('hour', si.INTERACTION_TIMESTAMP)) as HOUR_TIMESTAMP,
        CASE 
            WHEN cp.POSTAL_DISTRICT IN ('District 16-20') THEN 'East'
            WHEN cp.POSTAL_DISTRICT IN ('District 21-28') THEN 'West'  
            WHEN cp.POSTAL_DISTRICT IN ('District 11-15') THEN 'North'
            WHEN cp.POSTAL_DISTRICT IN ('District 01-05', 'District 06-10') THEN 'Central'
            ELSE 'Central'
        END as REGION,
        si.SERVICE_TYPE,
        si.AGENCY,
        si.INTERACTION_CHANNEL,
        COUNT(*) as INTERACTION_COUNT,
        ROUND(AVG(si.DURATION_MINUTES), 2) as AVG_DURATION,
        SUM(CASE WHEN si.SUCCESS_FLAG THEN 1 ELSE 0 END) as SUCCESS_COUNT,
        ROUND(AVG(si.SATISFACTION_RATING), 2) as AVG_SATISFACTION,
        COUNT(CASE WHEN si.INTERACTION_CHANNEL = 'Mobile App' THEN 1 END) as MOBILE_COUNT,
        COUNT(CASE WHEN si.INTERACTION_CHANNEL = 'Service Center' THEN 1 END) as IN_PERSON_COUNT
    FROM SNOWFLAKE_PUBSEC_DEMO.SERVICES.SERVICE_INTERACTIONS si
    JOIN SNOWFLAKE_PUBSEC_DEMO.CITIZEN_DATA.CITIZEN_PROFILES cp ON si.CITIZEN_ID = cp.CITIZEN_ID
    WHERE si.INTERACTION_TIMESTAMP >= DATEADD(day, -90, CURRENT_TIMESTAMP())
    GROUP BY 1, 2, 3, 4, 5
)
SELECT 
    hw.HOUR_TIMESTAMP,
    hw.REGION,
    hw.AVG_TEMP_C,
    hw.AVG_HUMIDITY,
    hw.TOTAL_RAINFALL,
    hw.WEATHER_ALERT_FLAG,
    hw.DOMINANT_WEATHER,
    hs.SERVICE_TYPE,
    hs.AGENCY,
    hs.INTERACTION_CHANNEL,
    hs.INTERACTION_COUNT,
    hs.AVG_DURATION,
    hs.SUCCESS_COUNT,
    hs.AVG_SATISFACTION,
    hs.MOBILE_COUNT,
    hs.IN_PERSON_COUNT,
    CASE 
        WHEN hw.TOTAL_RAINFALL > 10 THEN 'Heavy Rain Impact'
        WHEN hw.TOTAL_RAINFALL > 2 THEN 'Light Rain Impact'
        WHEN hw.AVG_TEMP_C > 32 THEN 'High Temperature Impact'
        WHEN hw.WEATHER_ALERT_FLAG = 1 THEN 'Weather Alert Impact'
        ELSE 'Normal Weather'
    END as WEATHER_IMPACT_CATEGORY,
    CASE 
        WHEN hs.MOBILE_COUNT > 0 AND hs.INTERACTION_COUNT > 0 THEN 
            ROUND((hs.MOBILE_COUNT * 100.0) / hs.INTERACTION_COUNT, 2)
        ELSE 0.00 
    END as MOBILE_ADOPTION_PCT,
    CASE 
        WHEN hw.TOTAL_RAINFALL > 5 AND hs.SUCCESS_COUNT > 0 AND hs.INTERACTION_COUNT > 0 THEN
            ROUND((hs.SUCCESS_COUNT * 100.0) / hs.INTERACTION_COUNT, 2)
        ELSE NULL
    END as WEATHER_RESILIENCE_SCORE
FROM HOURLY_WEATHER hw
LEFT JOIN HOURLY_SERVICES hs 
    ON hw.HOUR_TIMESTAMP = hs.HOUR_TIMESTAMP 
    AND hw.REGION = hs.REGION
WHERE hs.INTERACTION_COUNT IS NOT NULL;

SELECT 'âœ… Updated: WEATHER_SERVICE_CORRELATION' as STATUS;

-- ============================================================================
-- VERIFICATION QUERIES
-- ============================================================================

-- Check that all views exist and show sample data
SELECT 'Verification: All Analytics Views' as INFO;

SELECT 
    TABLE_NAME,
    CREATED,
    LAST_ALTERED
FROM INFORMATION_SCHEMA.VIEWS 
WHERE TABLE_SCHEMA = 'ANALYTICS' 
ORDER BY TABLE_NAME;

-- Sample data from each view to verify formatting
SELECT 'Sample: CITIZEN_SATISFACTION_SUMMARY (first 3 rows)' as INFO;
SELECT * FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.CITIZEN_SATISFACTION_SUMMARY LIMIT 3;

SELECT 'Sample: SERVICE_PERFORMANCE_DASHBOARD (first 3 rows)' as INFO;
SELECT * FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.SERVICE_PERFORMANCE_DASHBOARD LIMIT 3;

SELECT 'Sample: WEATHER_SERVICE_CORRELATION_SIMPLE (first 3 rows)' as INFO;
SELECT * FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION_SIMPLE LIMIT 3;

SELECT 'Sample: WEATHER_SERVICE_CORRELATION (first 3 rows)' as INFO;
SELECT * FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION LIMIT 3;

-- Check timezone conversion is working
SELECT 'Timezone Verification: Singapore Time vs UTC' as INFO;
SELECT 
    CURRENT_TIMESTAMP() as UTC_TIME,
    CONVERT_TIMEZONE('UTC', 'Asia/Singapore', CURRENT_TIMESTAMP()) as SINGAPORE_TIME,
    DATEDIFF(hour, CURRENT_TIMESTAMP(), CONVERT_TIMEZONE('UTC', 'Asia/Singapore', CURRENT_TIMESTAMP())) as HOUR_DIFFERENCE;

-- Check numeric formatting
SELECT 'Numeric Formatting Check: Weather Data Sample' as INFO;
SELECT 
    HOUR_TIMESTAMP,
    REGION,
    AVG_TEMP_C,
    AVG_HUMIDITY,
    TOTAL_RAINFALL,
    AVG_DURATION,
    AVG_SATISFACTION,
    MOBILE_ADOPTION_PCT
FROM SNOWFLAKE_PUBSEC_DEMO.ANALYTICS.WEATHER_SERVICE_CORRELATION 
WHERE AVG_TEMP_C IS NOT NULL 
LIMIT 5;

-- Final status
SELECT 'ðŸŽ‰ ALL ANALYTICS VIEWS SUCCESSFULLY UPDATED!' as FINAL_STATUS;
SELECT 'âœ… Singapore Timezone Applied' as TIMEZONE_STATUS;
SELECT 'âœ… 2 Decimal Places Applied' as FORMATTING_STATUS;
SELECT 'âœ… Location Mapping Fixed' as MAPPING_STATUS;
SELECT 'âœ… Division by Zero Protection Added' as SAFETY_STATUS;
